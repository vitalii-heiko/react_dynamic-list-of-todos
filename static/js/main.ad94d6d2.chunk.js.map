{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","todos","selectTodoId","selectedTodoId","className","map","todo","id","completed","title","type","onClick","TodoFilter","onStatusSelect","onQueryChange","query","onChange","e","target","value","placeholder","style","pointerEvents","Loader","TodoModal","closeModal","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","setSelectedTodoId","selectedStatus","setSelectedStatus","setQuery","filteredTodos","filter","queryMatchTitle","toLocaleLowerCase","includes","selectedTodo","find","status","inputValue","length","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad94d6d2.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst BASE_URL\n  = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  const fullURL = `${BASE_URL + url}.json`;\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectTodoId: (n: number) => void,\n  selectedTodoId: number | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodoId,\n  selectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={todo.completed\n              ? 'has-text-success'\n              : 'has-text-danger'}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                selectTodoId(todo.id);\n              }}\n            >\n              <span className=\"icon\">\n                <i className={selectedTodoId === todo.id\n                  ? 'far fa-eye-slash'\n                  : 'far fa-eye'}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","type Props = {\n  onStatusSelect: (s: string) => void,\n  onQueryChange: (s: string) => void,\n  query: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onStatusSelect,\n  onQueryChange,\n  query,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(e) => {\n            onStatusSelect(e.target.value);\n          }}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(e) => {\n          onQueryChange(e.target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              onQueryChange('');\n            }}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo,\n  closeModal: (n: number | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, closeModal }) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(todo.userId).then(userId => setUser(userId));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                closeModal(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                todo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              {user && (\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState<number | null>(null);\n  const [selectedStatus, setSelectedStatus] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const filteredTodos = todos.filter(todo => {\n    const queryMatchTitle = todo.title.toLocaleLowerCase()\n      .includes(query.toLocaleLowerCase());\n\n    switch (selectedStatus) {\n      case 'active':\n        return queryMatchTitle && todo.completed === false;\n      case 'completed':\n        return queryMatchTitle && todo.completed === true;\n      default:\n        return queryMatchTitle;\n    }\n  });\n\n  const selectedTodo = todos.find(todo => todo.id === selectedTodoId);\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onStatusSelect={(status) => {\n                  setSelectedStatus(status);\n                }}\n                onQueryChange={(inputValue) => {\n                  setQuery(inputValue);\n                }}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectTodoId={todoId => {\n                      setSelectedTodoId(todoId);\n                    }}\n                    selectedTodoId={selectedTodoId}\n                  />\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          closeModal={() => setSelectedTodoId(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}